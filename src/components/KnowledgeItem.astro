---
interface IconProps {
  src: string;
  label: string;
}

interface AstroProps {
  title: string;
  description: string;
  link?: string;
  date: string;
  icon?: IconProps[];
}

const { title, description, link, date, icon } = Astro.props;
---

<li class="mb-10 ms-6">
  <span
    class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -start-3 ring-8 ring-black dark:ring-gray-900 dark:bg-blue-900"
  >
    <svg
      class="w-2.5 h-2.5 text-green-500 dark:text-blue-300"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      viewBox="0 0 20 20"
    >
      <path
        d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"
      ></path>
    </svg>
  </span>
  <h3 class="mb-1 text-2xl font-semibold text-green-200 dark:text-white">
    {title}
  </h3>
  <time
    class="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"
    >{date}</time
  >
  <p class="text-base font-normal text-gray-500 dark:text-gray-400">
    {description}
  </p>
  <div class="grid grid-cols-3 md:grid-cols-8 gap-4">
    {
      Astro.props.icon?.map((iconItem: { src: string; label: string }) => (
        <img
          src={iconItem.src}
          alt="{iconItem.label}"
          class="inline-block w-20 mt-2 mr-2 h-auto max-w-full rounded-lg"
        />
      ))
    }
  </div>
</li>
